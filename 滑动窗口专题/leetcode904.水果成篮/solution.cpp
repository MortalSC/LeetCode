/*
题目描述：
https://leetcode.cn/problems/fruit-into-baskets

你正在探访一家农场，农场从左到右种植了一排果树。这些树用一个整数数组 fruits 表示，其中 fruits[i] 是第 i 棵树上的水果 种类 。

你想要尽可能多地收集水果。然而，农场的主人设定了一些严格的规矩，你必须按照要求采摘水果：

你只有 两个 篮子，并且每个篮子只能装 单一类型 的水果。每个篮子能够装的水果总量没有限制。
你可以选择任意一棵树开始采摘，你必须从 每棵 树（包括开始采摘的树）上 恰好摘一个水果 。
采摘的水果应当符合篮子中的水果类型。每采摘一次，你将会向右移动到下一棵树，并继续采摘。
一旦你走到某棵树前，但水果不符合篮子的水果类型，那么就必须停止采摘。
给你一个整数数组 fruits ，返回你可以收集的水果的 最大 数目。


示例 1：
输入：fruits = [1,2,1]
输出：3
解释：可以采摘全部 3 棵树。

示例 2：
输入：fruits = [0,1,2,2]
输出：3
解释：可以采摘 [1,2,2] 这三棵树。
如果从第一棵树开始采摘，则只能采摘 [0,1] 这两棵树。

示例 3：
输入：fruits = [1,2,3,2,2]
输出：4
解释：可以采摘 [2,3,2,2] 这四棵树。
如果从第一棵树开始采摘，则只能采摘 [1,2] 这两棵树。

示例 4：
输入：fruits = [3,3,3,1,2,1,1,2,3,3,4]
输出：5
解释：可以采摘 [1,2,1,1,2] 这五棵树。
 

提示：
1 <= fruits.length <= 105
0 <= fruits[i] < fruits.length
*/

/*
    问题翻译：在一个数组中找到不超过两种值的最长子数组长度
*/

#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    // 问题：在一个数组中找到不超过两种值得最长子数组长度
    int totalFruit(vector<int>& fruits) {
        // 滑动窗口：哈希表辅助
        int kinds = 0;                          // 记录窗口中水果的种类数
        int res = 0;                            // 记录最大长度
        int data[100001] = {0};                 // 哈希表（长度根据题意设定的）
        for(int left = 0, right = 0; right < fruits.size(); right++){
            // 进入窗口（首次进入种类数递增）
            if(data[right] == 0) kinds++;
            data[right]++;
            // 窗口维护
            while(kinds > 2){
                // 左窗口移动剔除元素，直到某一个元素计数为 0 （一定是 3 种元素）
                data[fruits[left++]]--;
                if(data[fruits[left]] == 0) kinds--;
            }
            res = max(res, right - left + 1);
        }
        return res;
    }
};